# Service headless cho Kafka để cung cấp DNS ổn định
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  clusterIP: None # Headless Service
  ports:
    - name: plaintext
      port: 9092
    - name: controller
      port: 9093
  selector:
    app: kafka
---
# StatefulSet cho 3 broker Kafka
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: "kafka-service"
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka-broker
          image: confluentinc/cp-kafka:7.6.1
          ports:
            - containerPort: 9092
              name: plaintext
            - containerPort: 9093
              name: controller
          env:
            - name: KAFKA_PROCESS_ROLES
              value: 'broker,controller'
            - name: KAFKA_NODE_ID
              valueFrom:
                fieldRef:
                  # Lấy số thứ tự của pod (ví dụ: kafka-0 -> 0)
                  fieldPath: metadata.name
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: 'CONTROLLER'
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: '0@kafka-0.kafka-service.default.svc.cluster.local:9093,1@kafka-1.kafka-service.default.svc.cluster.local:9093,2@kafka-2.kafka-service.default.svc.cluster.local:9093'
            - name: KAFKA_LISTENERS
              value: 'PLAINTEXT://:9092,CONTROLLER://:9093'
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://$(POD_NAME).kafka-service.default.svc.cluster.local:9092'
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # CLUSTER_ID nên được tạo và lưu vào một ConfigMap/Secret để dùng chung
            - name: CLUSTER_ID
              value: 'MkU3OEVBNTcwNTJENDM2Qk'
          # Cần cấu hình Persistent Volume để dữ liệu không bị mất
          # volumeMounts:
          #   - name: kafka-data
          #     mountPath: /var/lib/kafka/data
  # volumeClaimTemplates:
  #   - metadata:
  #       name: kafka-data
  #     spec:
  #       accessModes: [ "ReadWriteOnce" ]
  #       resources:
  #         requests:
  #           storage: 10Gi

---
# Deployment cho Kafka UI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui-deployment
  labels:
    app: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui:latest
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_CLUSTERS_0_NAME
              value: 'k8s-kraft-cluster'
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: 'kafka-service.default.svc.cluster.local:9092'

---
# Service để truy cập Kafka UI từ bên ngoài
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui-service
spec:
  type: LoadBalancer # Hoặc NodePort
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: kafka-ui